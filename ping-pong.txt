from pygame import *

img_hero = "racket.png"
img_ball = "ball.png"
'''Необходимые классы'''
#класс-родитель для спрайтов
class GameSprite(sprite.Sprite):
 # конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        # Вызываем конструктор класса (Sprite):
        sprite.Sprite.__init__(self)
        # каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        # каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
    # метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

class Player1(GameSprite):
    def update(self):
        keys = key.get_pressed() #метод для подключения клавиатуры
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_width - 80:
            self.rect.y += self.speed

class Player2(GameSprite):
    def update(self):
        keys = key.get_pressed() #метод для подключения клавиатуры
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_width - 80:
            self.rect.y += self.speed
            

#Игровая сцена
win_width = 700
win_height = 500
window = display.set_mode((win_width, win_height))
display.set_caption("PING PONG")
background = transform.scale(image.load ("bc.jpg"), (win_width, win_height))

#Персонажи игры
player1 = Player1(img_hero, 605, win_height - 60, 80, 70, 10)
player2 = Player2(img_hero, 5, win_height - 60, 80, 70, 10)
ball = GameSprite(img_ball, 200, 200, 50, 50, 5)

font.init()
font = font.Font(None, 35)
lose1 = font.render('Игрок 1 ПРОИГРАЛ!', True, (180, 0, 0))
lose2 = font.render('Игрок 2 ПРОИГРАЛ!', True, (180, 0, 0))
# Переменная "игра закончилась", как только там True, в основном цикле перестают работать спрайты
finish = False
clock = time.Clock()
game = True
FPS = 60

speed_x = 3
speed_y = 3
while game:
    for e in event.get():
        if e.type == QUIT:
            game = False
    if not finish:
        # обновляем фон
        window.blit(background, (0,0))

        #производим движения спрайтов
        player2.update()
        player1.update()
        ball.rect.x += speed_x
        ball.rect.y += speed_y

        if sprite.collide_rect(player1, ball) or sprite.collide_rect(player2, ball):
            speed_x *= -1
            speed_y *= 1
        
        #если мяч достигает границ экрана, меняем направление его движения
        if ball.rect.y > win_height-50 or ball.rect.y < 0:
            speed_y *= -1

        #если мяч улетел дальше, выводим условие проигрыша первого игрока
        if ball.rect.x < 0:
            finish = True
            window.blit(lose1, (200,200))
            game_over = True

        #если мяч улетел дальше, выводим условие проигрыша второго игрока
        if ball.rect.x > win_width:
            finish = True
            window.blit(lose2, (200,200))
            game_over = True
        #обновляем их в новом местоположении при каждой итерации цикла
        player2.reset()
        player1.reset()
        ball.reset()

    display.update()
    clock.tick(FPS)
